{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/Loader/Loader.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/post.ts","api/comments.ts","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","setSelectedPostId","className","map","post","userId","title","type","onClick","id","BASE_URL","Loader","NewCommentForm","create","useState","name","setName","email","setEmail","body","setBody","placeholder","value","onChange","e","target","disabled","preventDefault","PostDetails","setPost","comments","setComments","isOpenComment","setIsOpenComment","loading","setLoading","useEffect","postId","fetch","then","response","json","postFromServer","getPostComments","commentsFromServer","remove","commentId","method","deleteComment","prev","filter","length","comment","headers","JSON","stringify","responce","createComment","App","setPosts","selectedUserId","setSelectedUserId","postsFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e32e91be.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../../react-app-env';\nimport './PostsList.scss';\n\ntype Prop = {\n  posts: Post[],\n  selectedPostId: number,\n  setSelectedPostId: (postId: number) => void,\n};\n\nexport const PostsList: React.FC<Prop> = ({\n  posts,\n  selectedPostId,\n  setSelectedPostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>{`[User #${post.userId}]: `}</b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={\n              () => setSelectedPostId(post.id === selectedPostId ? 0 : post.id)\n            }\n          >\n            {\n              (post.id === selectedPostId)\n                ? 'Close'\n                : 'Open'\n            }\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  create: (name: string, email: string, body: string) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ create }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const disableButton = (): boolean => {\n    if ((name === '') || (email === '') || (body === '')) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n      </div>\n\n      <button\n        disabled={disableButton()}\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={(e) => {\n          e.preventDefault();\n          create(name, email, body);\n          setName('');\n          setEmail('');\n          setBody('');\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  createComment,\n  deleteComment,\n  getPostComments,\n} from '../../api/comments';\nimport { getPostDetail } from '../../api/post';\nimport { Comment, Post } from '../../react-app-env';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number,\n};\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [post, setPost] = useState<Post>();\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isOpenComment, setIsOpenComment] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getPostDetail(selectedPostId)\n      .then(postFromServer => setPost(postFromServer));\n    getPostComments(selectedPostId)\n      .then(commentsFromServer => setComments(commentsFromServer));\n  }, [selectedPostId]);\n\n  const remove = (commentId: number) => {\n    setLoading(true);\n    deleteComment(commentId);\n    setComments(prev => prev.filter(value => value.id !== commentId));\n    setLoading(false);\n  };\n\n  const create = (name: string, email: string, body: string) => {\n    setLoading(true);\n    createComment(selectedPostId, name, email, body)\n      .then(responce => setComments(prev => [...prev, responce]));\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setIsOpenComment(value => !value)}\n        >\n          {isOpenComment ? 'Hide' : 'Show'}\n          {` ${comments.length} comments`}\n        </button>\n\n        {isOpenComment\n          && (\n            <ul className=\"PostDetails__list\">\n              {\n                comments.map(comment => (\n                  <li key={comment.id} className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => remove(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))\n              }\n            </ul>\n          )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm create={create} />\n          {loading && <Loader />}\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { Post } from '../react-app-env';\nimport { BASE_URL } from './api';\n\nexport const getUserPosts = (userId: string): Promise<Post[]> => {\n  return fetch(`${BASE_URL}/posts?userId=${userId}`)\n    .then(response => response.json());\n};\n\nexport const getPostDetail = (postId: number): Promise<Post> => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json());\n};\n","import { BASE_URL } from './api';\nimport { Comment } from '../react-app-env';\n\nexport const getPostComments = (postId: number): Promise<Comment[]> => {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`).then(response => response.json());\n};\n\nexport const deleteComment = (commentId: number) => {\n  fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const createComment = (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<Comment> => {\n  return fetch(`${BASE_URL}/comments`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        postId,\n        name,\n        email,\n        body,\n      }),\n    }).then(responce => responce.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post } from './react-app-env';\nimport { getUserPosts } from './api/post';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    getUserPosts(selectedUserId)\n      .then(postsFromServer => setPosts(postsFromServer));\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(e) => setSelectedUserId(e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {(selectedPostId !== 0)\n            && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}